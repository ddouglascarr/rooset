---
label: Issue Aggregate - Create Initiatives Tests
key: issue-creation-command
type: DOMAIN_COMMAND_TEST

mocks:
  - &concernId 464b1ebb-32c1-460c-8e9e-111111111111
  - &unitId 464b1ebb-32c1-460c-8e9e-111111111111
  - &managerId 464b1ebb-32c1-460c-8e9e-222222222222
  - &areaId 464b1ebb-32c1-460c-8e9e-333333333333
  - &policyId 464b1ebb-32c1-460c-8e9e-888888888888
  - &voter1Id 464b1ebb-32c1-460c-8e9e-444444444444
  - &voter2Id 464b1ebb-32c1-460c-8e9e-555555555555
  - &voter3Id 464b1ebb-32c1-460c-8e9e-999999999999

  - &issueId 464b1ebb-32c1-460c-8e9e-666666666666
  - &initiative1Id 464b1ebb-32c1-4601-8e91-111111111111


  - &unitCreatedEvent
    type: UNIT_CREATED_EVENT
    payload:
      id: *unitId
      requesterId: *managerId
      name: Test Unit
      description: The Test Unit
      urlParameterName: test-unit
  - &areaCreatedEvent
    type: AREA_CREATED_EVENT
    payload:
      id: *unitId
      requesterId: *managerId
      areaId: *areaId
      name: test area
      description: the test area
      externalReference: 'area.com'
  - &policyCreatedEvent
    type: POLICY_CREATED_EVENT
    payload:
      id: *unitId
      requesterId: *managerId
      policyId: *policyId
      name: Test Policy
      description: The Test Policy
      votingAlgorithm: SCHULZE
      maxAdmissionTime: 604800000
      minAdmissionTime: 0
      discussionTime: 604800000
      verificationTime: 604800000
      votingTime: 604800000
      issueQuorumNum: 1
      issueQuorumDen: 10
      initiativeQuorumNum: 2
      initiativeQuorumDen: 10
  - &privGrantedEvtVoter1
    type: PRIVILEGE_GRANTED_EVENT
    payload:
      id: *unitId
      requesterId: *managerId
      memberId: *voter1Id
      pollingRight: true
      votingRight: true
      initiativeRight: true
      managementRight: true
      weight: 1
  - &privGrantedEvtVoter2
    type: PRIVILEGE_GRANTED_EVENT
    payload:
      id: *unitId
      requesterId: *managerId
      memberId: *voter2Id
      pollingRight: true
      votingRight: true
      initiativeRight: false
      managementRight: true
      weight: 1
  - &privGrantedEvtVoter3
    type: PRIVILEGE_GRANTED_EVENT
    payload:
      id: *unitId
      requesterId: *managerId
      memberId: *voter3Id
      pollingRight: true
      votingRight: true
      initiativeRight: true
      managementRight: false
      weight: 1

  - &createNewInitiativeCmdPayload
    id: *issueId
    requesterId: *voter1Id
    initiativeId: *initiative1Id
    unitId: *unitId
    areaId: *areaId
    policyId: *policyId
    concernId: *concernId
    name: 'Test Initiative'
    content: 'mock content'
    created: 1483586759

  - &createCompetingInitiativeCmdPayload
    id: *issueId
    requesterId: *voter3Id
    initiativeId: 464b1ebb-32c1-460c-8e9e-000000000000
    name: 'Test Competing Initiative'
    content: 'mock competing content'
    created: 1483586759

  - &issueVerificationPhaseCompletedEvt
    type: ISSUE_VERIFICATION_PHASE_COMPLETED_EVENT
    payload:
      id: *issueId
      passingInitiatives:
        - *initiative1Id

  - &notFoundErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: ITEM_NOT_FOUND_EXCEPTION
      message: ''
  - &unprivilegedErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: UNPRIVILEGED_EXCEPTION
      message: ''
  - &conflictErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: CONFLICT_EXCEPTION
      message: ''
  - &issueStateErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: ISSUE_STATE_EXCEPTION
      message: ''


scenarios:

  -
    label: A non-initiator cannot create a new initiative
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter2
      - *policyCreatedEvent
    when:
      type: CREATE_NEW_INITIATIVE_COMMAND
      payload:
        <<: *createNewInitiativeCmdPayload
        requesterId: *voter2Id
    then: *unprivilegedErr

  -
    label: A non-initiator cannot create a competing initiative
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter1
      - *privGrantedEvtVoter2
      - *policyCreatedEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
    when:
      type: CREATE_COMPETING_INITIATIVE_COMMAND
      payload:
        <<: *createCompetingInitiativeCmdPayload
        requesterId: *voter2Id
    then: *unprivilegedErr

  -
    label: An initiator cannot create a new initiative with a non-existant area
    given:
      - *unitCreatedEvent
      - *privGrantedEvtVoter1
      - *policyCreatedEvent
    when:
      type: CREATE_NEW_INITIATIVE_COMMAND
      payload: *createNewInitiativeCmdPayload
    then: *notFoundErr

  -
    label: An initiator can create a new initiative
    given:
      description: A unit with an area, policy and concern is created
      key: area-created
      precondition:
        - *unitCreatedEvent
        - *areaCreatedEvent
        - *privGrantedEvtVoter1
        - *policyCreatedEvent
    when:
      description: An initiative tries to create a new initiative
      action:
        type: CREATE_NEW_INITIATIVE_COMMAND
        payload: *createNewInitiativeCmdPayload
    then:
      description: Event emitted
      outcome:
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload

  -
    label: An initiator cannot create an issue that already exists
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter1
      - *policyCreatedEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
    when:
      type: CREATE_NEW_INITIATIVE_COMMAND
      payload: *createNewInitiativeCmdPayload
    then:
      type: COMMAND_EVALUATION_EXCEPTION
      error: true
      payload:
        code: CONFLICT_EXCEPTION
        message: ''

  -
    label: An initiator can create a competing initiative
    given:
      key: issue-created
      precondition:
        - *unitCreatedEvent
        - *areaCreatedEvent
        - *privGrantedEvtVoter1
        - *privGrantedEvtVoter3
        - *policyCreatedEvent
        -
          type: NEW_INITIATIVE_CREATED_EVENT
          payload: *createNewInitiativeCmdPayload
    when:
      type: CREATE_COMPETING_INITIATIVE_COMMAND
      payload: *createCompetingInitiativeCmdPayload
    then:
      type: COMPETING_INITIATIVE_CREATED_EVENT
      payload: *createCompetingInitiativeCmdPayload

  -
    label: Should prevent double creation of initiatives
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter1
      - *privGrantedEvtVoter3
      - *policyCreatedEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
      -
        type: COMPETING_INITIATIVE_CREATED_EVENT
        payload: *createCompetingInitiativeCmdPayload
    when:
      type: CREATE_COMPETING_INITIATIVE_COMMAND
      payload: *createCompetingInitiativeCmdPayload
    then: *conflictErr

  -
    label: A member can not create competing initiatives after VERIFICATION phase
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter1
      - *privGrantedEvtVoter3
      - *policyCreatedEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
      - *issueVerificationPhaseCompletedEvt
    when:
      type: CREATE_COMPETING_INITIATIVE_COMMAND
      payload: *createCompetingInitiativeCmdPayload
    then: *issueStateErr
