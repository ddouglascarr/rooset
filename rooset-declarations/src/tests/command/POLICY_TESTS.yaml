---
label: Unit Aggregate - Policy
key: policy-command
type: DOMAIN_COMMAND_TEST
mocks:
  - &unitId 464b1ebb-32c1-460c-8e9e-111111111111
  - &managerId 464b1ebb-32c1-460c-8e9e-333333333333
  - &policyId 464b1ebb-32c1-460c-8e9e-222222222222
  - &wrongId 464b1ebb-32c1-460c-8e9e-777777777777
  - &voter0 464b1ebb-32c1-460c-8e9f-000000000000

  - &unitCreatedEvent
    type: UNIT_CREATED_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-333333333333
      name: Test Unit
      description: The Test Unit
      urlParameterName: test-unit
  - &addPolicyCommandPayload
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-333333333333
      policyId: 464b1ebb-32c1-460c-8e9e-222222222222
      name: Test Policy
      description: The Test Policy
      votingAlgorithm: SCHULZE
      maxAdmissionTime: 604800000
      minAdmissionTime: 0
      discussionTime: 604800000
      verificationTime: 604800000
      votingTime: 604800000
      issueQuorumNum: 1
      issueQuorumDen: 10
      initiativeQuorumNum: 1
      initiativeQuorumDen: 10
  - &addPolicyCommand
    type: CREATE_POLICY_COMMAND
    payload: *addPolicyCommandPayload
  - &policyAddedEvent
    type: POLICY_CREATED_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-333333333333
      policyId: 464b1ebb-32c1-460c-8e9e-222222222222
      name: Test Policy
      description: The Test Policy
      votingAlgorithm: SCHULZE
      maxAdmissionTime: 604800000
      minAdmissionTime: 0
      discussionTime: 604800000
      verificationTime: 604800000
      votingTime: 604800000
      issueQuorumNum: 1
      issueQuorumDen: 10
      initiativeQuorumNum: 1
      initiativeQuorumDen: 10

  - &privGrantedEvtVoter0
    type: PRIVILEGE_GRANTED_EVENT
    payload:
      id: *unitId
      requesterId: *managerId
      memberId: *voter0
      votingRight: true
      managementRight: false
      pollingRight: false
      initiativeRight: true
      weight: 1

  - &notFoundErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: ITEM_NOT_FOUND_EXCEPTION
      message: ''
  - &unprivilegedErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: UNPRIVILEGED_EXCEPTION
      message: ''
  - &conflictErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: CONFLICT_EXCEPTION
      message: ''

scenarios:

  -
    label: A manager can add a policy
    given:
      description: A unit is created
      key: unit-created
      precondition:
        - *unitCreatedEvent
        - *privGrantedEvtVoter0
    when: *addPolicyCommand
    then: *policyAddedEvent

  -
    label: A non-manager cannot add a policy
    given: unit-created
    when:
      <<: *addPolicyCommand
      payload:
        <<: *addPolicyCommandPayload
        requesterId: *wrongId
    then:
      description: It is not allowed
      outcome: *unprivilegedErr


  -
    label: A manager cannot add an already existing policy
    given:
      description: A policy has been added
      key: policy-added
      precondition:
        - *unitCreatedEvent
        - *privGrantedEvtVoter0
        - *policyAddedEvent
    when:
      description: A manager tries to add the same policy again
      action: *addPolicyCommand
    then:
      description: It is not allowed
      outcome: *conflictErr


  -
    label: A non-manager cannot deactivate a policyId
    given: policy-added
    when:
      description: A non-manager tries to deactivate a policy
      action:
        type: DEACTIVATE_POLICY_COMMAND
        payload:
          id: *unitId
          requesterId: *voter0
          policyId: *policyId
    then:
      description: It is not allowed
      outcome: *unprivilegedErr


  -
    label: A manager can deactivate a policy
    given: policy-added
    when:
      description: A manager tries to deactivate a policy
      action:
        type: DEACTIVATE_POLICY_COMMAND
        payload:
          id: *unitId
          requesterId: *managerId
          policyId: *policyId
    then:
      description: A POLICY_DEACTIVATED_EVENT is emitted
      outcome: &policyDeactivatedEvent
        type: POLICY_DEACTIVATED_EVENT
        payload:
          id: *unitId
          requesterId: *managerId
          policyId: *policyId


  -
    label: A manager cannot deactive a policy that is already deactivated
    given:
      description: A policy has been deactivated
      precondition:
        - *unitCreatedEvent
        - *privGrantedEvtVoter0
        - *policyAddedEvent
        - *policyDeactivatedEvent
    when:
      description: A manager tries to deactivate the same policy
      action:
        type: DEACTIVATE_POLICY_COMMAND
        payload:
          id: *unitId
          requesterId: *managerId
          policyId: *policyId
    then:
      description: It is not allowed
      outcome: *conflictErr
