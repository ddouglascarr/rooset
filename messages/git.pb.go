// Code generated by protoc-gen-go. DO NOT EDIT.
// source: git.proto

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Blob struct {
	SHA                  string   `protobuf:"bytes,1,opt,name=SHA,proto3" json:"SHA,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_git_41f820f4560ab91f, []int{0}
}
func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (dst *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(dst, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

func (m *Blob) GetSHA() string {
	if m != nil {
		return m.SHA
	}
	return ""
}

func (m *Blob) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CommitRecord struct {
	SHA                  string   `protobuf:"bytes,1,opt,name=SHA,proto3" json:"SHA,omitempty"`
	BranchName           string   `protobuf:"bytes,2,opt,name=BranchName,proto3" json:"BranchName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRecord) Reset()         { *m = CommitRecord{} }
func (m *CommitRecord) String() string { return proto.CompactTextString(m) }
func (*CommitRecord) ProtoMessage()    {}
func (*CommitRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_git_41f820f4560ab91f, []int{1}
}
func (m *CommitRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRecord.Unmarshal(m, b)
}
func (m *CommitRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRecord.Marshal(b, m, deterministic)
}
func (dst *CommitRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRecord.Merge(dst, src)
}
func (m *CommitRecord) XXX_Size() int {
	return xxx_messageInfo_CommitRecord.Size(m)
}
func (m *CommitRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRecord proto.InternalMessageInfo

func (m *CommitRecord) GetSHA() string {
	if m != nil {
		return m.SHA
	}
	return ""
}

func (m *CommitRecord) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

type BlobRecord struct {
	SHA                  string   `protobuf:"bytes,1,opt,name=SHA,proto3" json:"SHA,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlobRecord) Reset()         { *m = BlobRecord{} }
func (m *BlobRecord) String() string { return proto.CompactTextString(m) }
func (*BlobRecord) ProtoMessage()    {}
func (*BlobRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_git_41f820f4560ab91f, []int{2}
}
func (m *BlobRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobRecord.Unmarshal(m, b)
}
func (m *BlobRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobRecord.Marshal(b, m, deterministic)
}
func (dst *BlobRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobRecord.Merge(dst, src)
}
func (m *BlobRecord) XXX_Size() int {
	return xxx_messageInfo_BlobRecord.Size(m)
}
func (m *BlobRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobRecord.DiscardUnknown(m)
}

var xxx_messageInfo_BlobRecord proto.InternalMessageInfo

func (m *BlobRecord) GetSHA() string {
	if m != nil {
		return m.SHA
	}
	return ""
}

func (m *BlobRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Blob)(nil), "messages.Blob")
	proto.RegisterType((*CommitRecord)(nil), "messages.CommitRecord")
	proto.RegisterType((*BlobRecord)(nil), "messages.BlobRecord")
}

func init() { proto.RegisterFile("git.proto", fileDescriptor_git_41f820f4560ab91f) }

var fileDescriptor_git_41f820f4560ab91f = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0xcf, 0x2c, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xc8, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0x56,
	0x32, 0xe2, 0x62, 0x71, 0xca, 0xc9, 0x4f, 0x12, 0x12, 0xe0, 0x62, 0x0e, 0xf6, 0x70, 0x94, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x85, 0x24, 0xb8, 0xd8, 0x9d, 0xf3, 0xf3, 0x4a, 0x52,
	0xf3, 0x4a, 0x24, 0x98, 0xc0, 0xa2, 0x30, 0xae, 0x92, 0x03, 0x17, 0x8f, 0x73, 0x7e, 0x6e, 0x6e,
	0x66, 0x49, 0x50, 0x6a, 0x72, 0x7e, 0x51, 0x0a, 0x16, 0xbd, 0x72, 0x5c, 0x5c, 0x4e, 0x45, 0x89,
	0x79, 0xc9, 0x19, 0x7e, 0x89, 0xb9, 0xa9, 0x50, 0xed, 0x48, 0x22, 0x4a, 0x46, 0x5c, 0x5c, 0x20,
	0x5b, 0x71, 0xea, 0x17, 0xe2, 0x62, 0x41, 0xd2, 0x09, 0x66, 0x27, 0xb1, 0x81, 0x9d, 0x6e, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x92, 0x31, 0x21, 0xc7, 0x00, 0x00, 0x00,
}
