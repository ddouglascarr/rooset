// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages/github.proto

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateGithubManagedUnit struct {
	UnitID               string   `protobuf:"bytes,1,opt,name=UnitID,proto3" json:"UnitID,omitempty"`
	RequesterID          string   `protobuf:"bytes,2,opt,name=RequesterID,proto3" json:"RequesterID,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	URLParemeterName     string   `protobuf:"bytes,5,opt,name=URLParemeterName,proto3" json:"URLParemeterName,omitempty"`
	VoterIDs             []string `protobuf:"bytes,6,rep,name=VoterIDs,proto3" json:"VoterIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGithubManagedUnit) Reset()         { *m = CreateGithubManagedUnit{} }
func (m *CreateGithubManagedUnit) String() string { return proto.CompactTextString(m) }
func (*CreateGithubManagedUnit) ProtoMessage()    {}
func (*CreateGithubManagedUnit) Descriptor() ([]byte, []int) {
	return fileDescriptor_github_995872024cd7d534, []int{0}
}
func (m *CreateGithubManagedUnit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGithubManagedUnit.Unmarshal(m, b)
}
func (m *CreateGithubManagedUnit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGithubManagedUnit.Marshal(b, m, deterministic)
}
func (dst *CreateGithubManagedUnit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGithubManagedUnit.Merge(dst, src)
}
func (m *CreateGithubManagedUnit) XXX_Size() int {
	return xxx_messageInfo_CreateGithubManagedUnit.Size(m)
}
func (m *CreateGithubManagedUnit) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGithubManagedUnit.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGithubManagedUnit proto.InternalMessageInfo

func (m *CreateGithubManagedUnit) GetUnitID() string {
	if m != nil {
		return m.UnitID
	}
	return ""
}

func (m *CreateGithubManagedUnit) GetRequesterID() string {
	if m != nil {
		return m.RequesterID
	}
	return ""
}

func (m *CreateGithubManagedUnit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateGithubManagedUnit) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateGithubManagedUnit) GetURLParemeterName() string {
	if m != nil {
		return m.URLParemeterName
	}
	return ""
}

func (m *CreateGithubManagedUnit) GetVoterIDs() []string {
	if m != nil {
		return m.VoterIDs
	}
	return nil
}

type SyncPullRequestCommand struct {
	IssueID              string   `protobuf:"bytes,1,opt,name=IssueID,proto3" json:"IssueID,omitempty"`
	UnitID               string   `protobuf:"bytes,2,opt,name=UnitID,proto3" json:"UnitID,omitempty"`
	InitiativeID         string   `protobuf:"bytes,3,opt,name=InitiativeID,proto3" json:"InitiativeID,omitempty"`
	InitiatorID          string   `protobuf:"bytes,4,opt,name=InitiatorID,proto3" json:"InitiatorID,omitempty"`
	IsActive             bool     `protobuf:"varint,5,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	CommitID             string   `protobuf:"bytes,6,opt,name=CommitID,proto3" json:"CommitID,omitempty"`
	PRID                 string   `protobuf:"bytes,7,opt,name=PRID,proto3" json:"PRID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncPullRequestCommand) Reset()         { *m = SyncPullRequestCommand{} }
func (m *SyncPullRequestCommand) String() string { return proto.CompactTextString(m) }
func (*SyncPullRequestCommand) ProtoMessage()    {}
func (*SyncPullRequestCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_github_995872024cd7d534, []int{1}
}
func (m *SyncPullRequestCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncPullRequestCommand.Unmarshal(m, b)
}
func (m *SyncPullRequestCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncPullRequestCommand.Marshal(b, m, deterministic)
}
func (dst *SyncPullRequestCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncPullRequestCommand.Merge(dst, src)
}
func (m *SyncPullRequestCommand) XXX_Size() int {
	return xxx_messageInfo_SyncPullRequestCommand.Size(m)
}
func (m *SyncPullRequestCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncPullRequestCommand.DiscardUnknown(m)
}

var xxx_messageInfo_SyncPullRequestCommand proto.InternalMessageInfo

func (m *SyncPullRequestCommand) GetIssueID() string {
	if m != nil {
		return m.IssueID
	}
	return ""
}

func (m *SyncPullRequestCommand) GetUnitID() string {
	if m != nil {
		return m.UnitID
	}
	return ""
}

func (m *SyncPullRequestCommand) GetInitiativeID() string {
	if m != nil {
		return m.InitiativeID
	}
	return ""
}

func (m *SyncPullRequestCommand) GetInitiatorID() string {
	if m != nil {
		return m.InitiatorID
	}
	return ""
}

func (m *SyncPullRequestCommand) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *SyncPullRequestCommand) GetCommitID() string {
	if m != nil {
		return m.CommitID
	}
	return ""
}

func (m *SyncPullRequestCommand) GetPRID() string {
	if m != nil {
		return m.PRID
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateGithubManagedUnit)(nil), "messages.CreateGithubManagedUnit")
	proto.RegisterType((*SyncPullRequestCommand)(nil), "messages.SyncPullRequestCommand")
}

func init() { proto.RegisterFile("messages/github.proto", fileDescriptor_github_995872024cd7d534) }

var fileDescriptor_github_995872024cd7d534 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0xcf, 0x4a, 0x3b, 0x31,
	0x18, 0x64, 0xdb, 0xfe, 0xb6, 0x6d, 0xfa, 0x3b, 0x48, 0xc0, 0x9a, 0x16, 0x0f, 0xa5, 0xa7, 0xe2,
	0x41, 0x0f, 0xde, 0x7a, 0x93, 0x2e, 0x48, 0x40, 0xa5, 0x44, 0xea, 0x55, 0xd2, 0xed, 0xe7, 0x1a,
	0xd8, 0x24, 0x35, 0xc9, 0x0a, 0x5e, 0xfb, 0x18, 0x7d, 0x37, 0x1f, 0xc0, 0xb7, 0x90, 0x64, 0xff,
	0xb0, 0xc5, 0xd3, 0x66, 0xe6, 0x9b, 0xd9, 0xcc, 0x7c, 0x41, 0xe7, 0x12, 0xac, 0xe5, 0x19, 0xd8,
	0x9b, 0x4c, 0xb8, 0xf7, 0x62, 0x7b, 0xbd, 0x37, 0xda, 0x69, 0x3c, 0xa8, 0xe9, 0xe9, 0x65, 0x23,
	0x48, 0x0b, 0xeb, 0xb4, 0x7c, 0x7d, 0x13, 0x90, 0xef, 0x6c, 0xa9, 0x9b, 0x7f, 0x47, 0xe8, 0x62,
	0x65, 0x80, 0x3b, 0xb8, 0x0f, 0xf6, 0x47, 0xae, 0x78, 0x06, 0xbb, 0x8d, 0x12, 0x0e, 0x8f, 0x51,
	0xec, 0xbf, 0x34, 0x21, 0xd1, 0x2c, 0x5a, 0x0c, 0x59, 0x85, 0xf0, 0x0c, 0x8d, 0x18, 0x7c, 0x14,
	0x60, 0x1d, 0x18, 0x9a, 0x90, 0x4e, 0x18, 0xb6, 0x29, 0x8c, 0x51, 0xef, 0x89, 0x4b, 0x20, 0xdd,
	0x30, 0x0a, 0x67, 0xef, 0x4a, 0xc0, 0xa6, 0x46, 0xec, 0x9d, 0xd0, 0x8a, 0xf4, 0x4a, 0x57, 0x8b,
	0xc2, 0x57, 0xe8, 0x6c, 0xc3, 0x1e, 0xd6, 0xdc, 0x80, 0x04, 0x07, 0x26, 0xfc, 0xe1, 0x5f, 0x90,
	0xfd, 0xe1, 0xf1, 0x14, 0x0d, 0x5e, 0x74, 0xb8, 0xcc, 0x92, 0x78, 0xd6, 0x5d, 0x0c, 0x59, 0x83,
	0x97, 0xe8, 0x78, 0x98, 0x54, 0x59, 0xe7, 0x3f, 0x11, 0x1a, 0x3f, 0x7f, 0xa9, 0x74, 0x5d, 0xe4,
	0x79, 0x95, 0x70, 0xa5, 0xa5, 0xe4, 0x6a, 0x87, 0x09, 0xea, 0x53, 0x6b, 0x0b, 0x68, 0xfa, 0xd5,
	0xb0, 0x55, 0xbc, 0x73, 0x52, 0x7c, 0x8e, 0xfe, 0x53, 0x25, 0x9c, 0xe0, 0x4e, 0x7c, 0x7a, 0x5b,
	0x59, 0xef, 0x84, 0xf3, 0x35, 0x2b, 0xac, 0xfd, 0x72, 0xaa, 0x9a, 0x2d, 0xca, 0x47, 0xa7, 0xf6,
	0x2e, 0xf5, 0xfa, 0x50, 0x6f, 0xc0, 0x1a, 0xec, 0x67, 0x3e, 0x5e, 0xb8, 0x3b, 0x0e, 0xd6, 0x06,
	0xfb, 0xa5, 0xae, 0x19, 0x4d, 0x48, 0xbf, 0x5c, 0xaa, 0x3f, 0x2f, 0x47, 0xc7, 0xc3, 0xa4, 0x8e,
	0xbd, 0x8d, 0xc3, 0x93, 0xde, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x58, 0x26, 0x41, 0x13,
	0x02, 0x00, 0x00,
}
