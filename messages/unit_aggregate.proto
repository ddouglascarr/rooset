syntax = "proto3";
package messages;

import "messages/custom_fields.proto";

message CreateUnitCommand {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string Name = 3;
  string Description = 4;
  string URLParameterName = 5;  
}

message UnitCreatedEvent {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string Name = 3;
  string Description = 4;
  string URLParameterName = 5;  
}

message GrantPrivilegeCommand {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string MemberID = 3;
  bool VotingRight = 5;
  bool InitiativeRight = 6;
  bool ManagementRight = 7;
  uint32 Weight = 8;
}

message PrivilegeGrantedEvent {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string MemberID = 3;
  bool VotingRight = 5;
  bool InitiativeRight = 6;
  bool ManagementRight = 7;
  uint32 Weight = 8;
}

message RevokePrivilegeCommand {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string MemberID = 3;
}

message PrivilegeRevokedEvent {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string MemberID = 3;
  uint32 Weight = 4;
}

message CreateAreaCommand {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string AreaID = 3;
  string Name = 4;
  string Description = 5;
}

message AreaCreatedEvent {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string AreaID = 3;
  string Name = 4;
  string Description = 5;
}


message CreatePolicyCommand {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string PolicyID = 3;
  string Description = 4;
  
  // Max / min amount of time before an issue is passed the Admision phase
  int32 MinAdmissionDuration = 5;
  int32 MaxAdmissionDuration = 6;

  // phase durations
  int32 DiscussionDuration = 7;
  int32 VerificationDuration = 8;
  int32 VotingDuration = 9;

  // quorums required (numerator / denominator)
  int32 IssueQuorumNum = 10;
  int32 IssueQuorumDen = 11;
  int32 InitiativeQuorumNum = 12;
  int32 InitiativeQuorumDen = 13;
}

message PolicyCreatedEvent {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string PolicyID = 3;
  string Description = 4;
  
  // Max / min amount of time before an issue is passed the Admision phase
  int32 MinAdmissionDuration = 5;
  int32 MaxAdmissionDuration = 6;

  // phase durations
  int32 DiscussionDuration = 7;
  int32 VerificationDuration = 8;
  int32 VotingDuration = 9;

  // quorums required (numerator / denominator)
  int32 IssueQuorumNum = 10;
  int32 IssueQuorumDen = 11;
  int32 InitiativeQuorumNum = 12;
  int32 InitiativeQuorumDen = 13;
}

message DeactivatePolicyCommand {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string PolicyID = 3;
}

message PolicyDeactivatedEvent {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string PolicyID = 3;
}

message AllowAreaPolicyCommand {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string PolicyID = 3;
  string AreaID = 4;
}

message AreaPolicyAllowedEvent {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string PolicyID = 3;
  string AreaID = 4;
}

message DisallowAreaPolicyCommand {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string PolicyID = 3;
  string AreaID = 4;
}

message AreaPolicyDisallowedEvent {
  option (messages.AggregateRootField) = "UnitID";

  string UnitID = 1;
  string RequesterID = 2;
  string PolicyID = 3;
  string AreaID = 4;
}
