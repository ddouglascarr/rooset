---
label: Issue Aggregate - Create Initiatives Tests

mocks:
  - &unitCreatedEvent
    type: UNIT_CREATED_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-222222222222
      name: Test Unit
      description: The Test Unit
  - &areaCreatedEvent
    type: AREA_CREATED_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-222222222222
      areaId: 464b1ebb-32c1-460c-8e9e-333333333333
      name: test area
      description: the test area
      externalReference: 'area.com'
  - &unitPolicySetEvent
    type: UNIT_POLICY_SET_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-333333333333
      policyId: 464b1ebb-32c1-460c-8e9e-888888888888
      name: Test Policy
      description: The Test Policy
      polling: false
      maxAdmissionTime: 604800000
      minAdmissionTime: 0
      discussionTime: 604800000
      verificationTime: 604800000
      votingTime: 604800000
      issueQuorumNum: 1
      issueQuorumDen: 10
      defeatStrength: SIMPLE
      directMajorityNum: 1
      directMajorityDen: 2
      directMajorityStrict: true
      directMajorityPositive: 1
      directMajorityNonNegative: 1
      noReverseBeatPath: false
      noMultistageMajority: false
  - &privGrantedEvtVoter4
    type: PRIVILEGE_GRANTED_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-222222222222
      memberId: 464b1ebb-32c1-460c-8e9e-444444444444
      pollingRight: true
      votingRight: true
      initiativeRight: true
      managementRight: true
  - &privGrantedEvtVoter5
    type: PRIVILEGE_GRANTED_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-222222222222
      memberId: 464b1ebb-32c1-460c-8e9e-555555555555
      pollingRight: true
      votingRight: true
      initiativeRight: false
      managementRight: true
  - &privGrantedEvtVoter9
    type: PRIVILEGE_GRANTED_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-111111111111
      requesterId: 464b1ebb-32c1-460c-8e9e-222222222222
      memberId: 464b1ebb-32c1-460c-8e9e-999999999999
      pollingRight: true
      votingRight: true
      initiativeRight: true
      managementRight: false

  - &createNewInitiativeCmdPayload
    id: 464b1ebb-32c1-460c-8e9e-666666666666
    requesterId: 464b1ebb-32c1-460c-8e9e-444444444444
    initiativeId: 464b1ebb-32c1-460c-8e9e-777777777777
    unitId: 464b1ebb-32c1-460c-8e9e-111111111111
    areaId: 464b1ebb-32c1-460c-8e9e-333333333333
    policyId: 464b1ebb-32c1-460c-8e9e-888888888888
    name: 'Test Initiative'
    polling: false
    externalReference: ''
    content: 'mock content'
    textSearchData: 'foo, bar'

  - &createCompetingInitiativeCmdPayload
    id: 464b1ebb-32c1-460c-8e9e-666666666666
    requesterId: 464b1ebb-32c1-460c-8e9e-999999999999
    initiativeId: 464b1ebb-32c1-460c-8e9e-000000000000
    name: 'Test Competing Initiative'
    externalReference: 'foobar'
    content: 'mock competing content'
    textSearchData: 'bing, bong'

  - &issueVerificationPhaseCompletedEvt
    type: ISSUE_VERIFICATION_PHASE_COMPLETED_EVENT
    payload:
      id: 464b1ebb-32c1-460c-8e9e-666666666666
      passingInitiatives:
        - 464b1ebb-32c1-460c-8e9e-777777777777

  - &notFoundErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: ITEM_NOT_FOUND_EXCEPTION
      message: ''
  - &unprivilegedErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: UNPRIVILEGED_EXCEPTION
      message: ''
  - &conflictErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: CONFLICT_EXCEPTION
      message: ''
  - &issueStateErr
    type: COMMAND_EVALUATION_EXCEPTION
    error: true
    payload:
      code: ISSUE_STATE_EXCEPTION
      message: ''


scenarios:

  -
    label: To Create New Initiative Member must have initiative rights
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter5
      - *unitPolicySetEvent
    when:
      type: CREATE_NEW_INITIATIVE_COMMAND
      payload:
        <<: *createNewInitiativeCmdPayload
        requesterId: 464b1ebb-32c1-460c-8e9e-555555555555
    then: *unprivilegedErr

  -
    label: To create competing initiative member must have initiative rights
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter4
      - *privGrantedEvtVoter5
      - *unitPolicySetEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
    when:
      type: CREATE_COMPETING_INITIATIVE_COMMAND
      payload:
        <<: *createCompetingInitiativeCmdPayload
        requesterId: 464b1ebb-32c1-460c-8e9e-555555555555
    then: *unprivilegedErr

  -
    label: Area Must Exsist
    given:
      - *unitCreatedEvent
      - *privGrantedEvtVoter4
      - *unitPolicySetEvent
    when:
      type: CREATE_NEW_INITIATIVE_COMMAND
      payload: *createNewInitiativeCmdPayload
    then: *notFoundErr

  -
    label: Create New Initiative
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter4
      - *unitPolicySetEvent
    when:
      type: CREATE_NEW_INITIATIVE_COMMAND
      payload: *createNewInitiativeCmdPayload
    then:
      type: NEW_INITIATIVE_CREATED_EVENT
      payload: *createNewInitiativeCmdPayload

  -
    label: Should prevent double creation of issues
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter4
      - *unitPolicySetEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
    when:
      type: CREATE_NEW_INITIATIVE_COMMAND
      payload: *createNewInitiativeCmdPayload
    then:
      type: COMMAND_EVALUATION_EXCEPTION
      error: true
      payload:
        code: CONFLICT_EXCEPTION
        message: ''

  -
    label: Create Competing Initiative
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter4
      - *privGrantedEvtVoter9
      - *unitPolicySetEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
    when:
      type: CREATE_COMPETING_INITIATIVE_COMMAND
      payload: *createCompetingInitiativeCmdPayload
    then:
      type: COMPETING_INITIATIVE_CREATED_EVENT
      payload: *createCompetingInitiativeCmdPayload

  -
    label: Should prevent double creation of initiatives
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter4
      - *privGrantedEvtVoter9
      - *unitPolicySetEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
      -
        type: COMPETING_INITIATIVE_CREATED_EVENT
        payload: *createCompetingInitiativeCmdPayload
    when:
      type: CREATE_COMPETING_INITIATIVE_COMMAND
      payload: *createCompetingInitiativeCmdPayload
    then: *conflictErr

  -
    label: Can not create competing initiatives after VERIFICATION phase
    given:
      - *unitCreatedEvent
      - *areaCreatedEvent
      - *privGrantedEvtVoter4
      - *privGrantedEvtVoter9
      - *unitPolicySetEvent
      -
        type: NEW_INITIATIVE_CREATED_EVENT
        payload: *createNewInitiativeCmdPayload
      - *issueVerificationPhaseCompletedEvt
    when:
      type: CREATE_COMPETING_INITIATIVE_COMMAND
      payload: *createCompetingInitiativeCmdPayload
    then: *issueStateErr
