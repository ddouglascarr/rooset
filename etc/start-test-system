#!/bin/bash
set -eou pipefail

################################################################################
# 
# Starts a clean Rooset system for testing. 
# All data will be lost on exit
#
################################################################################

SCRIPTDIR=`dirname "$(readlink -f "$0")"`
cd $SCRIPTDIR

EVENTSTORE_LOG_FILE="/tmp/rooset-testing-eventstore.log"
EVENTSTORE_PID_FILE="/tmp/rooset-testing-eventstore.pid"

EVENTSTORE_READY_LINE="Sub System 'Projections' initialized"
ELASTICSTORE_READY_LINE="success"

# elasticsearch_pid=0
# eventstore_pid=0

# Kill all processes on exit
kill_all_children () {
  kill $(cat ${EVENTSTORE_PID_FILE})
  # kill ${elasticsearch_pid}
  echo "Killed all children"
  exit 0
}
trap kill_all_children EXIT

# Start eventstore with in-memory database
echo "starting eventstore"
(
  eventstored --mem-db --run-projections=all 2>&1 > ${EVENTSTORE_LOG_FILE} &
  echo $! > ${EVENTSTORE_PID_FILE}
)
( tail --pid=$$ -f ${EVENTSTORE_LOG_FILE} & ) | grep -q "${EVENTSTORE_READY_LINE}"
echo "eventstore started with pid: $(cat ${EVENTSTORE_PID_FILE})"

# Start elasticsearch with a fresh database
#(
#  ${SCRIPTDIR}/start-test-elasticsearch &
#  elasticsearch_pid=$!
#) | tee -a ${LOG_FILE} | grep -q "${ELASTICSEARCH_READY_LINE}"
# echo "elasticsearch started with pid: ${elasticsearch_pid}"

# Keep script alive
while true; do sleep 5; done

