#!/bin/bash

################################################################################
#
# set-env
#
# Sets up a standard Rooset development bash environment
#
# e.g.
#
#   $ . etc/set-env
#
################################################################################

SCRIPT_DIR="${BASH_SOURCE%/*}"

# Postgres config
export PGUSER="postgres"
export PGPASSWORD="postgres"
export PGHOST="localhost" # convenience only. use ROOSET_CMD_HOST and ROOSET_QUERY_HOST in the app

# Rooset Specific DB config (requires 2 databases, which may be on different servers)
export ROOSET_CMD_DB="rooset_cmd"
export ROOSET_CMD_HOST="localhost"
export ROOSET_QUERY_DB="rooset_query"
export ROOSET_QUERY_HOST="localhost"
export ROOSET_INTEGRATION_TEST_PORT="5433"
export ROOSET_CACHE_HOST="localhost"
export ROOSET_CACHE_NUM="9"

export ROOSET_SERVER_PORT="12345"

export ROOSET_GITHUB_CALLBACK_URI="http://localhost:12345/auth/github/callback"

# Secrets are in an uncommitted script called etc/secret/set-secrets-env. 
# Contains:
#  - ROOSET_GITHUB_CLIENT_ID
#  - ROOSET_GITHUB_CLIENT_SECRET
#  - ROOSET_GITHUB_APP_ID
#  - ROOSET_GITHUB_APP_PRIVATE_KEY
. ${SCRIPT_DIR}/secret/set-secrets-env


# Put '(rooset)' in front of the command prompt. But not if there's already one there.
if ! [ -z "${PS1}" ]; then
  if ! [ -z "${ROOSET_OLD_PS1}" ]; then
      PS1=${ROOSET_OLD_PS1}
  fi
  export ROOSET_OLD_PS1=${PS1}
  export PS1="(rooset)${PS1}"
fi
